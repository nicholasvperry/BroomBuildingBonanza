/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Canvas, useFrame } from '@react-three/fiber'
import { Suspense } from 'react/cjs/react.production.min'
import { OrbitControls } from '@react-three/drei'

export const TestModel = ({ ...props }) => {
    const group = useRef()
    const { nodes, materials } = useGLTF('/pictures/buzz/buzz.glb')
    return (
      <group ref={group} {...props} dispose={null}>
        <primitive object={nodes.Root} />
        <skinnedMesh
          geometry={nodes.body_GeoShape.geometry}
          material={nodes.body_GeoShape.material}
          skeleton={nodes.body_GeoShape.skeleton}
        />
        <skinnedMesh
          geometry={nodes.body_GeoShape_1.geometry}
          material={nodes.body_GeoShape_1.material}
          skeleton={nodes.body_GeoShape_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.eyebrow_Geo.geometry}
          material={nodes.eyebrow_Geo.material}
          skeleton={nodes.eyebrow_Geo.skeleton}
        />
        <skinnedMesh
          geometry={nodes.film_roll_geoShape.geometry}
          material={nodes.film_roll_geoShape.material}
          skeleton={nodes.film_roll_geoShape.skeleton}
        />
        <skinnedMesh
          geometry={nodes.film_roll_geoShape_1.geometry}
          material={nodes.film_roll_geoShape_1.material}
          skeleton={nodes.film_roll_geoShape_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.glasses_geo.geometry}
          material={nodes.glasses_geo.material}
          skeleton={nodes.glasses_geo.skeleton}
        />
        <skinnedMesh
          geometry={nodes.hat_geo.geometry}
          material={nodes.hat_geo.material}
          skeleton={nodes.hat_geo.skeleton}
        />
        <skinnedMesh
          geometry={nodes.megaphone_geoShape.geometry}
          material={nodes.megaphone_geoShape.material}
          skeleton={nodes.megaphone_geoShape.skeleton}
        />
        <skinnedMesh
          geometry={nodes.megaphone_geoShape_1.geometry}
          material={nodes.megaphone_geoShape_1.material}
          skeleton={nodes.megaphone_geoShape_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.scarf_Geo.geometry}
          material={nodes.scarf_Geo.material}
          skeleton={nodes.scarf_Geo.skeleton}
        />
        <skinnedMesh
          geometry={nodes.scarf_knot_edge_Geo.geometry}
          material={nodes.scarf_knot_edge_Geo.material}
          skeleton={nodes.scarf_knot_edge_Geo.skeleton}
        />
        <skinnedMesh
          geometry={nodes.scarf_knot_Geo.geometry}
          material={nodes.scarf_knot_Geo.material}
          skeleton={nodes.scarf_knot_Geo.skeleton}
        />
      </group>
    )
}


export const finishedTest = () => {
    return (

        <Canvas>
      <OrbitControls />
      <directionalLight intensity={0.5} />
      <ambientLight intensity={0.5} />
      <Suspense fallback={null}>
        <TestModel/>
      </Suspense>
    </Canvas>
    )
}
useGLTF.preload('/pictures/buzz/buzz.glb')